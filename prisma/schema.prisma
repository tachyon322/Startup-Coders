generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String    @id @default(uuid())
  username              String?   @unique
  email                 String    @unique
  name                  String?
  image                 String?
  description           String?
  tags                  Tag[]
  createdStartups       Startup[]
  participatingStartups Startup[] @relation("participants")
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  emailVerified         Boolean
  sessions              Session[]
  accounts              Account[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Tag {
  id      Int       @id
  name    String
  startup Startup[]
  user    User[]
}

model Startup {
  id           String   @id @default(uuid())
  name         String
  description  String
  image        String?
  websiteUrl   String?
  participants User[]   @relation("participants")
  tags         Tag[]
  creatorUser  String
  creatorId    User     @relation(fields: [creatorUser], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
